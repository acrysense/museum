"use strict";

document.addEventListener('DOMContentLoaded', function () {
  // functions
  function setLineClamp(element, maxHeight) {
    var lineHeight = parseFloat(getComputedStyle(element).lineHeight);
    var clampValue = Math.floor(maxHeight / lineHeight);
    element.style.setProperty('-webkit-line-clamp', clampValue);
  }
  function mainItemGetHeight(items) {
    items.forEach(function (item) {
      var contentBlockHeight = item.clientHeight;
      var title = item.querySelector('.main__title');
      var description = item.querySelector('.main__description');
      if (title && description) {
        var titleHeight = title.getBoundingClientRect().height;
        var remainingHeight = contentBlockHeight - titleHeight - parseInt(getComputedStyle(description).paddingTop);
        if (remainingHeight > 0) {
          setLineClamp(description, remainingHeight);
        } else {
          setLineClamp(description, 0);
        }
      }
    });
  }
  function generateEmptyColumns(container, numColumns, className) {
    for (var i = 1; i <= numColumns; i++) {
      var gridItem = document.createElement('div');
      gridItem.classList.add(className);
      container.appendChild(gridItem);
    }
  }

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  var mobileMenuClose = document.querySelector('.menu__close');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        mobileMenu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', function (event) {
        event.preventDefault();
        if (mobileMenu.classList.contains('is--active')) {
          mobileMenu.classList.remove('is--active');
          document.body.classList.remove('scroll-disabled');
        }
      });
    }
  }

  // main dynamic
  var mainItems = document.querySelectorAll('.main__item');
  if (mainItems) {
    mainItemGetHeight(mainItems);
  }

  // resident
  // function splitTextIntoColumns(textBlock, columnWidth, heightRatio) {
  //     const maxHeight = columnWidth * heightRatio; // Максимальная высота для колонки
  //     const text = textBlock.textContent.trim(); // Получаем текст
  //     const words = text.split(' '); // Разбиваем текст на слова
  //     let currentHeight = 0;
  //     let currentColumnText = ''; // Для текущего параграфа
  //     let nextColumnText = ''; // Текст для следующей колонки
  //     let tempParagraph = document.createElement('p'); // Временный параграф для измерений

  //     // Проверяем каждое слово, добавляя его к параграфу
  //     for (let word of words) {
  //       tempParagraph.textContent = currentColumnText + ' ' + word;
  //       textBlock.appendChild(tempParagraph);

  //       // Если текст превышает максимальную высоту, переносим оставшийся текст
  //       if (textBlock.scrollHeight > maxHeight) {
  //         nextColumnText = words.slice(words.indexOf(word)).join(' '); // Оставшийся текст
  //         break;
  //       }

  //       // Если высота не превышена, добавляем слово к текущему тексту
  //       currentColumnText += ' ' + word;
  //       textBlock.removeChild(tempParagraph); // Удаляем временный элемент после проверки
  //     }

  //     // Устанавливаем текст для текущей колонки
  //     textBlock.textContent = currentColumnText.trim();

  //     // Если есть текст для следующей колонки, создаём новую колонку
  //     if (nextColumnText.trim()) {
  //       const newColumn = document.createElement('div');
  //       newColumn.classList.add('resident__content-block');
  //       newColumn.innerHTML = `<p>${nextColumnText.trim()}</p>`;
  //       textBlock.parentNode.appendChild(newColumn);

  //       // Рекурсивно вызываем функцию для переноса оставшегося текста
  //       splitTextIntoColumns(newColumn, columnWidth, heightRatio);
  //     }
  // }

  // const textBlock = document.querySelector('.resident__content-block');
  // const columnWidth = 210; // Ширина колонки
  // const heightRatio = 1.3667; // Высота 136.67% от ширины

  // splitTextIntoColumns(textBlock, columnWidth, heightRatio);

  // function distributeTextFromDiv(divId) {
  //     const contentDiv = document.getElementById(divId);
  //     const columns = document.querySelectorAll('.text-column');
  //     let currentColumn = 0;

  //     // Функция для добавления элемента в колонку с проверкой высоты
  //     function tryAddElement(element) {
  //       if (currentColumn >= columns.length) return; // Останавливаем на последней колонке

  //       columns[currentColumn].appendChild(element);

  //       // Проверяем, не превышена ли высота
  //       if (columns[currentColumn].scrollHeight > 500) {
  //         columns[currentColumn].removeChild(element); // Если не помещается, удаляем
  //         currentColumn++;
  //         if (currentColumn < columns.length) {
  //           columns[currentColumn].appendChild(element); // Добавляем в следующую колонку
  //         }
  //       }
  //     }

  //     // Проходим по каждому элементу контента
  //     contentDiv.childNodes.forEach((node) => {
  //       if (currentColumn >= columns.length) return; // Останавливаемся на последней колонке

  //       // Если это <p>, создаём span и добавляем в колонку
  //       if (node.nodeName === 'P') {
  //         const span = document.createElement('span');
  //         span.innerHTML = node.innerHTML; // Копируем контент <p> внутрь <span>
  //         tryAddElement(span);

  //         // Добавляем отступ вместо <p>
  //         if (currentColumn < columns.length) {
  //           const spanSpace = document.createElement('span');
  //           spanSpace.classList.add('span-space');
  //           tryAddElement(spanSpace);
  //         }
  //       }

  //       // Если это <br>, добавляем отступ через span
  //       if (node.nodeName === 'BR') {
  //         const spanSpace = document.createElement('span');
  //         spanSpace.classList.add('span-space');
  //         tryAddElement(spanSpace);
  //       }
  //     });
  // }

  // distributeTextFromDiv('content');

  // resident alphabet
  var residentAlphabetWrapper = document.querySelector('.residents-alphabet__wrapper');
  if (residentAlphabetWrapper) {
    var alphabetHeight = residentAlphabetWrapper.getBoundingClientRect().height;
    console.log(alphabetHeight / 5);
    // generateEmptyColumns(residentAlphabetWrapper, 5, 'residents-alphabet__item');
  }

  // window
  window.addEventListener('resize', function () {
    if (mainItems) {
      mainItemGetHeight(mainItems);
    }
  });
});